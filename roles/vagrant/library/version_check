#!/usr/bin/python
# -*- coding: utf-8 -*-

DOCUMENTATION = '''
---
module: version_check
short_description: Check that a version falls between an minimum and maximum version
description:
   - A module to test that a version string (x.x.x) meets a minimum and maximum version
     using distutils.version.
options:
    version:
        description:
            - The version to check
        required: true
    minimum:
        description:
            - The minimum required version 
        required: false
        default: None
    maximum:
        description:
        - The maximum required version 
        required: false
        default: None
author: George Lee
'''

EXAMPLES = '''
# Testing two abitrary versions
ansible all -m version_check -a "verision=1.3 minimum=0.9.1 maximum=2.0.1"
'''

from distutils.version import LooseVersion

def fail(msg):
    print json.dumps({
        "failed" : True,
        "msg"    : msg
    })
    sys.exit(1)

def main():
    module = AnsibleModule(
        argument_spec = dict(
            version = dict(required=True),
            maximum = dict(required=False, default=None),
            minimum = dict(required=False, default=None)
        ),
        supports_check_mode = True
    )

    valid = True
    minimum = module.params['minimum']
    version = module.params['version']
    maximum = module.params['maximum']

    if not minimum and not maximum:
        fail("Either minimum or maximum version needs to be specified.")

    if minimum and maximum and LooseVersion(minimum) > LooseVersion(maximum):
        fail("Minimum version must be less than or equal to maximum version.")

    if minimum:
        valid = valid and LooseVersion(minimum) <= LooseVersion(version)

    if maximum:
        valid = valid and LooseVersion(version) <= LooseVersion(maximum)

    result = dict(version_check=dict(valid=valid))
    module.exit_json(**result)

from ansible.module_utils.basic import *

main()